name: "Publish docker image"
description: "Publish docker image"

inputs:
  DOCKER_TARGET_PLATFORMS:
    description: "Docker buildx target platforms"
    required: false
    default: "linux/amd64" # change to "linux/amd64,linux/arm64" to support also arm64
  DOCKER_BUILD_ARGS:
    description: "Docker build arguments"
    required: false
  REGISTRY_TOKEN:
    description: "The docker registry token"
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ inputs.REGISTRY_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up tags
      id: build-tags
      shell: bash
      env:
        REGISTRY: ghcr.io/${{ github.repository_owner }}
        REPOSITORY: financer
      run: |
        IMAGE_NAME=$REGISTRY/$REPOSITORY
        echo "COMMIT_REF=${IMAGE_NAME}:$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "BUILD_NUMBER=${IMAGE_NAME}:${{ github.run_number }}" >> $GITHUB_OUTPUT
          echo "LATEST=${IMAGE_NAME}:latest" >> $GITHUB_OUTPUT
        else
          echo "BUILD_NUMBER=${IMAGE_NAME}:dev-${{ github.run_number }}" >> $GITHUB_OUTPUT
          echo "LATEST=${IMAGE_NAME}:dev-latest" >> $GITHUB_OUTPUT
        fi

    - name: Build and publish
      uses: docker/build-push-action@v5
      with:
        platforms: ${{ inputs.DOCKER_TARGET_PLATFORMS }}
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: docker/Dockerfile
        tags: |
          ${{ steps.build-tags.outputs.BUILD_NUMBER }}
          ${{ steps.build-tags.outputs.COMMIT_REF }}
          ${{ steps.build-tags.outputs.LATEST }}
        build-args: |
          ${{ inputs.DOCKER_BUILD_ARGS }}
