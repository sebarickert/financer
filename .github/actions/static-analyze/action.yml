name: "Run static analyze"
description: "Automatically detect if it PR or base branch and based on that load proper test coverage."

inputs:
  PACKAGE_ROOT:
    description: "The root directory of the application. This is for monorepos where the package.json is not in the root directory."
    required: false
    default: "."

  GITHUB_TOKEN:
    description: "Token to authenticate with the GitHub API."
    required: true

  SONAR_TOKEN:
    description: "Token to authenticate with the SonarCloud API."
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Parse artifact name
      id: parse_artifact_name
      shell: "bash"
      run: |
        # Set the artifact name based on PACKAGE_ROOT
        # If PACKAGE_ROOT is ".", set artifact_name to "coverage"
        # Otherwise, replace "/" with "-" in PACKAGE_ROOT and set artifact_name to "coverage-PACKAGE_ROOT"
        if [ "${{ inputs.PACKAGE_ROOT }}" == "." ]; then
          echo "artifact_name=coverage" >> $GITHUB_ENV
        else
          sanitized_package_root="${{ inputs.PACKAGE_ROOT }}"
          sanitized_package_root="${sanitized_package_root//\//-}"
          echo "artifact_name=coverage-${sanitized_package_root}" >> $GITHUB_ENV
        fi

    - name: Restore coverage artifact
      uses: actions/download-artifact@v4
      if: github.event_name == 'pull_request'
      with:
        name: ${{ env.artifact_name }}
        path: ${{ inputs.PACKAGE_ROOT }}

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}
      with:
        projectBaseDir: ${{ inputs.PACKAGE_ROOT }}
