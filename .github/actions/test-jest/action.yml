name: "Run Jest Tests and Collect Coverage"
description: "Run Jest tests for the project and collect coverage reports"

inputs:
  PACKAGE_ROOT:
    description: "The root directory of the application. This is for monorepos where the package.json is not in the root directory."
    required: false
    default: "."

runs:
  using: "composite"
  steps:
    - name: Run unit tests
      shell: "bash"
      run: |
        cd ${{ inputs.PACKAGE_ROOT }}

        npm run test -- --json --coverage --testLocationInResults --outputFile=report.json --coverageReporters=json-summary --coverageReporters=lcov

        mv coverage/coverage-summary.json coverage-summary.json
        mv coverage/lcov.info lcov.info

        cd -

    - name: Parse artifact name
      id: parse_artifact_name
      shell: "bash"
      run: |
        # Set the artifact name based on PACKAGE_ROOT
        # If PACKAGE_ROOT is ".", set artifact_name to "coverage"
        # Otherwise, replace "/" with "-" in PACKAGE_ROOT and set artifact_name to "coverage-PACKAGE_ROOT"
        if [ "${{ inputs.PACKAGE_ROOT }}" == "." ]; then
          echo "artifact_name=coverage" >> $GITHUB_ENV
        else
          sanitized_package_root="${{ inputs.PACKAGE_ROOT }}"
          sanitized_package_root="${sanitized_package_root//\//-}"
          echo "artifact_name=coverage-${sanitized_package_root}" >> $GITHUB_ENV
        fi

    - name: Store coverage to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.artifact_name }}
        path: |
          ${{ inputs.PACKAGE_ROOT }}/report.json
          ${{ inputs.PACKAGE_ROOT }}/coverage-summary.json
          ${{ inputs.PACKAGE_ROOT }}/lcov.info
